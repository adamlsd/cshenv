############################
### Final Prompt Setting ###
############################
@ prompt_hcolor = $prompt_hcolor % ${#reference_colors}
@ prompt_hsym = $prompt_hsym % ${#referencechars}

set critical_battery_level = 10
set low_battery_level      = 20
set weak_battery_level     = 33
set medium_battery_level   = 50
set strong_battery_level   = 75


if( ${prompt_hcolor} == 0 ) then
    #if( $?CSHENV_DEBUG ) then
        #echo colorshuffle
    #endif
    #echo 
    # Shuffle, if supported
    if( $?CSHENV_DETECTED_SHUF ) then
        set reference_colors=`shuf -e $reference_colors`
    else
        #echo "FALLBACK COLOR!"
        set reference_colors=`echo $reference_colors | tr " " "\n" | sort -R | xargs`
    endif
endif
    

if( ${prompt_hsym} == 0 ) then # && ${prompt_hcolor} == 0 ) then
    if( $?CSHENV_DEBUG ) then
        echo symbolshuffle
    endif
    #echo 
    if( $?CSHENV_DETECTED_SHUF ) then
        set referencechars=`shuf -e $referencechars`
        #set reference_colors=`shuf -e $reference_colors`
    else
        #echo "FALLBACK CHAR!"
        set referencechars=`echo $referencechars | tr " " "\n" | sort -R | xargs`
    endif
endif

@ prompt_hcolor = ${prompt_hcolor} + 1
@ prompt_hsym = ${prompt_hsym} + 1

if( $?CSHENV_DEBUG ) then
    echo ${prompt_hcolor} ${prompt_hsym}
    echo "Setting prompt"
endif


set prompt_reference_core="%{${reference_colors[${prompt_hcolor}]}%}${referencechars[${prompt_hsym}]}"
#if( ${referencechars[${prompt_hsym}]} == `env LC_ALL=C.UTF-8 printf "\u2328"` ) then
#    set prompt_reference="%{${dim}%}<${prompt_reference_core}  %{${dim}%}> "
#else
#    set prompt_reference="%{${dim}%}< ${prompt_reference_core} %{${dim}%}> "
#endif
set prompt_reference="%{${dim}%}< ${prompt_reference_core} %{${dim}%}> "
#set prompt_reference="%{${csi}0;48\;5\;7m%}(${prompt_reference_core}%{${csi}0;48\;5\;7m%})%{${dim}%}"
#set prompt_reference="${prompt_reference_core}%{${text_color_seq}%} \- "

if( $?CSHENV_SHOW_BATTERY_LEVEL ) then
    if( $CSHENV_SYSTEM == "Darwin" ) then
        set battery_level=`pmset -g batt | grep -Eo "\d+%" | cut -d% -f1`
    else if( $?CSHENV_BATTERY_DEVICE ) then
        set battery_level=`cat ${CSHENV_BATTERY_DEVICE}`
    else
        set battery_level=`cat /sys/class/power_supply/BAT1/capacity`
    endif
    if( ${battery_level} < ${critical_battery_level} ) then
        set battery_color=${red}${blink}
    else if( ${battery_level} < ${low_battery_level} ) then
        set battery_color=${red}
    else if( ${battery_level} < ${weak_battery_level} ) then
        set battery_color=${yellow}
    else if( ${battery_level} < ${medium_battery_level} ) then
        set battery_color=${bright_yellow}
    else if( ${battery_level} < ${strong_battery_level} ) then
        set battery_color=${green}
    else
        set battery_color=${bright_green}
    endif

    if( ${battery_level} < 10 ) then
        set battery_level="  ${battery_level}"
    else if( ${battery_level} < 100 ) then
        set battery_level=" ${battery_level}"
    endif

    #set battery_prompt="%{${battery_color}%}%{${battery_level}${at_color}\%%}%{${dim}%} "
    set battery_prompt="%{${csi}28D${csi}38;2;128;128;255;3mBattery Level:${dim} ${battery_color}${battery_level}${at_color}\%${dim}         %}"
else
    set battery_prompt=""
endif

set prompt_cool="%{\n%}${align_prefix}${battery_prompt}${date_prompt}${align_suffix}${brace_color_seq}\[${prompt_reference}${line_prompt}${depth_prompt}${user_prompt}${at_color_seq}@${host_prompt}${text_color_seq}\: ${path_prompt}${brace_color_seq}\]${end_prompt}"

if( ! ${?cshenv_user_prompt_override} ) then
	set prompt="$prompt_cool"
endif

###########################
# vim:filetype=tcsh
###########################
