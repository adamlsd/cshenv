"au BufNewFile,BufRead		*.i,*.l			setf c
au BufNewFile,BufRead		mk*			set filetype=make
"au BufNewFile,BufRead		*.slogo			setf c
au BufNewFile,BufRead		*.tex		map _ {!}fmt -p -s -w 70 
au BufNewFile,BufRead		*.tex			set textwidth=78
au BufNewFile,BufRead		*.java			set tabstop=4
au BufNewFile,BufRead		*.java			set shiftwidth=4

" Alephaish
au BufNewFile,BufRead		*.cpp,*.hpp,*.cc,*.h		set sw=4
au BufNewFile,BufRead		*.cpp,*.hpp,*.cc,*.h		set ts=4
au BufNewFile,BufRead		*.cpp,*.hpp,*.cc,*.h		set sts=4
au BufNewFile,BufRead		*.cpp,*.hpp,*.cc,*.h		set sta
au BufNewFile,BufRead		*.cpp,*.hpp,*.cc,*.h		set noet
au BufNewFile,BufRead		*.cpp,*.hpp,*.cc,*.h		set tw=150

au BufNewFile,BufRead		*/cshenv/tcshrc.*		set filetype=tcsh

au BufNewFile,BufRead      */src/bp/*.cpp,*/src/bp/*.hpp  syn region cxxBoostLibrary matchgroup=cxxLibPrefix start="\<\(bp_boost\)\z(::\)\@=" matchgroup=NONE skip="\z1" end="\>" transparent
au BufNewFile,BufRead      */src/bp/*.cpp,*/src/bp/*.hpp  syn region cxxBoostVerbotenLibrary matchgroup=cxxStlDangerousFunction start="\<\(boost\)\z(::\)\@=" matchgroup=NONE skip="\z1" end="\>" transparent

" falcish
"au BufNewFile,BufRead		*.cpp,*.hpp,*.cc,*.h		set ts=3
"au BufNewFile,BufRead		*.cpp,*.hpp,*.cc,*.h		set sts=3
"au BufNewFile,BufRead		*.cpp,*.hpp,*.cc,*.h		set sw=3
"au BufNewFile,BufRead		*.cpp,*.hpp,*.cc,*.h		set et

" mongoish
"au BufNewFile,BufRead		*.cpp,*.hpp,*.cc,*.h		set ts=2
"au BufNewFile,BufRead		*.cpp,*.hpp,*.cc,*.h		set sts=2
"au BufNewFile,BufRead		*.cpp,*.hpp,*.cc,*.h		set sw=2
"au BufNewFile,BufRead		*.cpp,*.hpp,*.cc,*.h		set sta
"au BufNewFile,BufRead		*.cpp,*.hpp,*.cc,*.h		set et
"au BufNewFile,BufRead		*.cpp,*.hpp,*.cc,*.h		set tw=100

au FileType * setlocal formatoptions=tcq

"if has("syntax")
"	syntax on
"endif

" Statusline workaround:
au BufWinEnter quickfix source ~/.vim/vimrc.statusline

" Sometimes some distros make us load up on the last line edited, when reading for the first time...
" This should fix this.
au BufReadPost * :1
au BufNewFile * :1
